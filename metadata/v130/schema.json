{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "https://raw.githubusercontent.com/OpenEnergyPlatform/oemetadata/production/metadata/v130/schema.json",
    "description": "Contains general information",
    "type": "object",
    "properties": {
        "title": {
            "description": "Long title of the table / data. Example: \"title\": \" \"",
            "type": "string"
        },
        "description": {
            "description": "Additional information and more detailed description. Example: \"description\": \" \"",
            "type": "string"
        },
        "language": {
            "description": "Languages used (ISO 639-3 code). Example: \"language\": [\"eng\",\"ger\"]",
            "type": "array",
            "items": {
                "type": [
                    "string",
                    "null"
                ]
            }
        },
        "spatial": {
            "description": "Contains information about the spatial dimension",
            "type": "object",
            "properties": {
                "location": {
                    "description": "Data located at a certain location using the global reference system WGS84 in decimal notation. Example: \"location\": \"52.43, 13.55\"",
                    "type": "string"
                },
                "extent": {
                    "description": "Area covered. Example: \"extent\": \"Europe\"",
                    "type": "string"
                },
                "resolution": {
                    "description": "Regular raster with a constant value. Example: \"resolution\": \"100 m\"",
                    "type": "string"
                }
            }
        },
        "temporal": {
            "description": "Contains information about the temporal dimension",
            "type": "object",
            "properties": {
                "reference_date": {
                    "description": "Particular year, month or day to which the data is recorded (ISO 8601). Example: \"reference_date\": \"2017-01-01\"",
                    "type": "string"
                },
                "start": {
                    "description": "Marks the first entry of a time series. Follows the ISO 8601 format (<date>T<time>±<timezone>). Example: \"start\": \"2017-01-01T00:00:00+01\"",
                    "type": "string"
                },
                "end": {
                    "description": "Marks the last entry of a time series. Follows the ISO 8601 format (<date>T<time>±<timezone>). Example: \"end\": \"2017-12-31T23:00:00+01\"",
                    "type": "string"
                },
                "resolution": {
                    "description": "Temporal resolution indicates the time between two time steps in a time series. Example: \"resolution\": \"1 h\"",
                    "type": "string"
                }
            }
        },
        "sources": {
            "description": "Contains information about the sources",
            "type": "array",
            "items": {
                "description": "Source object in list of source objects. Each object has all name-value-pairs.",
                "type": "object",
                "properties": {
                    "name": {
                        "description": "The name or title of the source. Example: \"name\": \" \"",
                        "type": "string"
                    },
                    "description": {
                        "description": "A more detailed description of the source. Example: \"description\": \" \"",
                        "type": "string"
                    },
                    "url": {
                        "description": "A link to the description and the download. Example: \"url\": \" \"",
                        "type": "string"
                    },
                    "license": {
                        "description": "The full name of the license. Example: \"license\": \" \"",
                        "type": "string"
                    },
                    "copyright": {
                        "description": "The copyright owner can be added. Some open licenses require mention of the copyright holder. Example: \"copyright\": \"© Reiner Lemoine Institut\"",
                        "type": "string"
                    }
                }
            }
        },
        "license": {
            "description": "Contains information about the data license",
            "type": "object",
            "properties": {
                "id": {
                    "description": "The license ID is a unique identifier published in the Open License Service (http://licenses.opendefinition.org/). Example: \"id\": \"ODbL-1.0\"",
                    "type": "string"
                },
                "name": {
                    "description": "Full name of the license. Example: \"name\": \" \"",
                    "type": "string"
                },
                "version": {
                    "description": "Specifies the versions of a license. Example: \"version\": \"1.0\"",
                    "type": "string"
                },
                "url": {
                    "description": "A link to the full text of the license. Example: \"url\": \" \"",
                    "type": "string"
                },
                "instruction": {
                    "description": "A short summary of the rights and obligations defined by the license (https://tldrlegal.com). Example: \"instruction\": \"Share, Create, Adapt; Attribute\"",
                    "type": "string"
                },
                "copyright": {
                    "description": "Some open licenses require giving explicit credit to the author or copyright owner. Example: \"copyright\": \" \"",
                    "type": "string"
                }
            }
        },
        "contributors": {
            "description": "Contains significant changes (data set or metadata)",
            "type": "array",
            "items": {
                "description": "A person or organization who contributed to this data package. Each object refers to one contributor. Every contributor must have a title and property. A path, email, role and organization properties are optional extras.",
                "type": "object",
                "properties": {
                    "name": {
                        "description": "Full name or a synonym (user name). Example: \"name\": \" \"",
                        "type": "string"
                    },
                    "email": {
                        "description": "The email address to contact a contributor. Example: \"email\": \" \"",
                        "type": "string"
                    },
                    "date": {
                        "description": "The date of the contribution in ISO 8601 format (YYYY-MM-TT). Example: \"date\": \"2017-05-01\"",
                        "type": "string"
                    },
                    "comment": {
                        "description": "A comment field to shortly describe the contribution. Example: \"comment\": \"Add license\"",
                        "type": "string"
                    }
                }
            }
        },
        "resources": {
            "description": "Contains information about the tables or files",
            "type": "array",
            "items": {
                "description": "The data resource format describes each data resource as an individual file or table.",
                "type": "object",
                "properties": {
                    "name": {
                        "description": "Name or path of the resource. Example: \"name\": \"schema.table\"",
                        "type": "string"
                    },
                    "format": {
                        "description": "The (file) format of the resource. Example: \"format\": \"PostgreSQL\"",
                        "type": "string"
                    },
                    "fields": {
                        "description": "Each field (column) of the table is described in detail. Every field is described in an object",
                        "type": "array",
                        "items": {
                            "description": "Each field object contains all three keys: name, description and unit.",
                            "type": "object",
                            "properties": {
                                "name": {
                                    "description": "Name string unique within its scope. Example: year",
                                    "type": "string"
                                },
                                "description": {
                                    "description": "Free-text describing the field. Example: Reference year for which the data were collected.",
                                    "type": "string"
                                },
                                "unit": {
                                    "description": "Unit, preferably SI-Unit, that values in this field are mapped to. If \"unit\" doesn't apply to a field, use \"none\". Example: MW",
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "metadata_version": {
            "description": "The metadata set has its own version number to identify which structure is used. Example: \"metadata_version\": \"1.3\"",
            "type": "string"
        },
        "_comment": {
            "description": "Object. The “_comment”-section is used as a self-description of the final metadata-file. It is text, intended for humans and can include a link to the metadata documentation(s), required value formats and similar remarks. The comment section has no fixed structure or mandatory values, but a useful self-description, similar to the one depicted here, is encouraged.",
            "type": "object",
            "properties": {
                "_url": {
                    "description": "URL that refers to the description if this metadata standard. Example: https://github.com/OpenEnergyPlatform/metadata/blob/develop/metadata/v130/schema.json",
                    "type": "string"
                },
                "_copyright": {
                    "description": "Copyrightholder of the produced data set. Example: © Reiner Lemoine Institut",
                    "type": "string"
                },
                "_metadata_license": {
                    "description": "license of the provided metadata as SPDX identifier. Example: CC0-1.0",
                    "type": "string"
                },
                "_metadata_license_url": {
                    "description": "Url or path string, that is a fully qualified HTTP address. Example: https://creativecommons.org/publicdomain/zero/1.0/",
                    "type": "string"
                },
                "_contains": {
                    "description": "Metametadata: Link(s) to description of metadata structure. Example: http://www.json.org/; http://stackoverflow.com/questions/383692/what-is-json-and-why-would-i-use-it",
                    "type": "string"
                },
                "_additional_information": {
                    "description": "Object containing additional tips on the metadata format.",
                    "type": "object",
                    "properties": {
                        "_dates": {
                            "description": "Description of how dates should be formatted. Example: Dates must follow the ISO8601 (JJJJ-MM-TT)",
                            "type": "string"
                        },
                        "_units": {
                            "description": "Description of how units should be formatted. Example: Use a space between Numbers and units (100 m)",
                            "type": "string"
                        },
                        "_none": {
                            "description": "Description of how empty values should be formatted. Example: If not applicable use 'none'",
                            "type": "string"
                        }
                    }
                }
            }
        }
    }
}